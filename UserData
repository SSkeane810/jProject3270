package databaseInterface;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class UserData {
	
	
	String SecurityQuestion = null;

public static String getPassword(String id){
		
//public static void main(String[] args){
			
			String password = null;
			
			Connection con = null;
		
			Statement stmt = null;
				
		stmt = ConnectionHandling.Connect();
		
	    ResultSet rs = null;
	    
	    String sql = "SELECT Password FROM FlightProject.dbo.UserData WHERE ID = '" + id + "'"; 
	    
		try {
			
			rs = stmt.executeQuery(sql);
		  
			  while(rs.next()){

			         password = rs.getString("Password");

//			         System.out.println("Password: " + Password);
			      }
			  
			      rs.close();
			      
			   }catch(SQLException se){
				   
			      se.printStackTrace();
			      
			   }catch(Exception e){
			     
			      e.printStackTrace();
			      
			   }finally{

			      if(stmt!=null)
					 
				    ConnectionHandling.CloseConnection();
			      
			      if(con!=null)
					 
					 ConnectionHandling.CloseConnection();
			      
			   }

		return password;
					   
			}

public static void register(String username, String password, int administrator, String firstName,
		String lastName, String address, String city, String state,
		int zip, String email, String SSN,
		String securityQuestion, String securityAnswer, String ShoppingFlight1, 
		String ShoppingFlight2, String ShoppingFlight3, String ShoppingFlight4, 
		String ShoppingFlight5, String BookedFlight1, String BookedFlight2, 
		String BookedFlight3, String BookedFlight4, String BookedFlight5){
	
	//public static void main(String[] args){

				Connection con = null;
			
				Statement stmt = null;
					
				stmt = ConnectionHandling.Connect();
				
			    ResultSet rs = null;

		    String sql = "INSERT INTO FlightProject.dbo.UserData VALUES (  "
		            +"'" +username +"', "
		            +"'" +password +"', "
		            +"'" +administrator +"', "
		            +"'" +firstName +"', "
		            +"'" +lastName +"', "
		            +"'" +address +"', "
		            +"'" +city +"', "
		            +"'" +state +"', "
		            +"'" +zip +"', "
		            +"'" +email +"', "
		            +"'" +SSN +"', "
		            +"'" +securityAnswer +"', "
		            +"'" +ShoppingFlight1 +"', "
		            +"'" +ShoppingFlight2 +"', "
		            +"'" +ShoppingFlight3 +"', "
		            +"'" +ShoppingFlight4 +"', "
		            +"'" +ShoppingFlight5 +"', "
		            +"'" +BookedFlight1 +"', "
		            +"'" +BookedFlight2 +"', "
		            +"'" +BookedFlight3 +"', "
		            +"'" +BookedFlight4 +"', "
		            +"'" +BookedFlight5 +"')";  
		    
			try {
				
				rs = stmt.executeQuery(sql);
			  
				  while(rs.next()){
				 		username = rs.getString("username");
						password = rs.getString("password");
						administrator = rs.getInt("administrator");
						firstName = rs.getString("firstName");
						lastName = rs.getString("lastName");
						address = rs.getString("address");
						city = rs.getString("city");
						state = rs.getString("state");
						zip = rs.getInt("zip");
						email = rs.getString("email");
						SSN = rs.getString("SSN");
						securityQuestion = rs.getString("securityQuestion");
						securityAnswer = rs.getString("securityAnswer");
						ShoppingFlight1 = rs.getString("ShoppingFlight1");
						ShoppingFlight2 = rs.getString("ShoppingFlight2");
						ShoppingFlight3 = rs.getString("ShoppingFlight3");
						ShoppingFlight4 = rs.getString("ShoppingFlight4");
						ShoppingFlight5 = rs.getString("ShoppingFlight5");
						BookedFlight1 = rs.getString("BookedFlight1");
						BookedFlight2 = rs.getString("BookedFlight2");
						BookedFlight3 = rs.getString("BookedFlight3");
						BookedFlight4 = rs.getString("BookedFlight4");
						BookedFlight5 = rs.getString("BookedFlight5");
				      }
				  
				      rs.close();
				      
				   }catch(SQLException se){
					   
				      se.printStackTrace();
				      
				   }catch(Exception e){
				     
				      e.printStackTrace();
				      
				   }finally{

				      if(stmt!=null)
						 
					    ConnectionHandling.CloseConnection();
				      
				      if(con!=null)
						 
						 ConnectionHandling.CloseConnection();
				      
				   }
						   
			}

	public static String getSecurityQuestion(String id){
		
		String securityQuestion = null;
		
		Connection con = null;
	
		Statement stmt = null;
			
	stmt = ConnectionHandling.Connect();
	
    ResultSet rs = null;
    
    String sql = "SELECT SecurityQuestion FROM FlightProject.dbo.UserData WHERE ID = '" + id + "'"; 
    
	try {
		
		rs = stmt.executeQuery(sql);
	  
		  while(rs.next()){

		        securityQuestion = rs.getString("SecurityQuestion");
		        		
		         }

 		    rs.close();
		    
		 }catch(SQLException se){
			   
		    se.printStackTrace();
		    
		 }catch(Exception e){
		   
		    e.printStackTrace();
		    
		 }finally{
		
		    if(stmt!=null)
				 
			    ConnectionHandling.CloseConnection();
		    
		    if(con!=null)
				 
				 ConnectionHandling.CloseConnection();
		    
		 }	
	
		return securityQuestion;
		
	}

	public static boolean checkAdmin(String id) {
		
		Boolean administrator = null;
		
		Connection con = null;
	
		Statement stmt = null;
			
	stmt = ConnectionHandling.Connect();
	
    ResultSet rs = null;
    
    String sql = "SELECT Administrator FROM FlightProject.dbo.UserData WHERE ID = '" + id + "'"; 
    
	try {
		
		rs = stmt.executeQuery(sql);
	  
		  while(rs.next()){

		         if(rs.getInt("Administrator") == 1){
		        	 administrator = true;
		         }
		         
		         if(rs.getInt("Administrator") == 0){
		        	 administrator = false;
		         }

		      }
		  
		      rs.close();
		      
		   }catch(SQLException se){
			   
		      se.printStackTrace();
		      
		   }catch(Exception e){
		     
		      e.printStackTrace();
		      
		   }finally{

		      if(stmt!=null)
				 
			    ConnectionHandling.CloseConnection();
		      
		      if(con!=null)
				 
				 ConnectionHandling.CloseConnection();
		      
		   }
				   
		return administrator;
	}

	public static boolean addShopFlights(String flightNumber) {
		return false;
		// TODO Auto-generated method stub
		
	}

	public static String getSecurityAnswer(String id) {

		String securityAnswer = null;
		
		Connection con = null;
	
		Statement stmt = null;
			
	stmt = ConnectionHandling.Connect();
	
    ResultSet rs = null;
    
    String sql = "SELECT SeucrityAnswer FROM FlightProject.dbo.UserData WHERE ID = '" + id + "'"; 
    
	try {
		
		rs = stmt.executeQuery(sql);
	  
		  while(rs.next()){

			  securityAnswer = rs.getString("SecurityAnswer");
		        		
		         }

 		    rs.close();
		    
		 }catch(SQLException se){
			   
		    se.printStackTrace();
		    
		 }catch(Exception e){
		   
		    e.printStackTrace();
		    
		 }finally{
		
		    if(stmt!=null)
				 
			    ConnectionHandling.CloseConnection();
		    
		    if(con!=null)
				 
				 ConnectionHandling.CloseConnection();
		    
		 }	
	
		return securityAnswer;

	}

	public static boolean convertToAdmin(String id) {

		Boolean administrator = null;
		
		int adminValue = 1;
		
		Connection con = null;
	
		Statement stmt = null;
			
	stmt = ConnectionHandling.Connect();
	
    ResultSet rs = null;
    
    String sql = "UPDATE FlightProject.dbo.UserData SET Administrator = '" + adminValue + "' WHERE ID = '" + id + "'";
    
    try {
    	
		rs = stmt.executeQuery(sql);
	  
	    rs.close();
	    
	    return true;
	      
	   }catch(SQLException se){
		   
	      se.printStackTrace();
	      
	   }catch(Exception e){
	     
	      e.printStackTrace();
	      
	   }finally{

	      if(stmt!=null)
			 
		    ConnectionHandling.CloseConnection();
	      
	      if(con!=null)
			 
			 ConnectionHandling.CloseConnection();
	      
	   }

return false;

	}

	public static boolean clearCart(String id) {
			
		Connection con = null;
	
		Statement stmt = null;
			
	stmt = ConnectionHandling.Connect();
	
    ResultSet rs = null;
    
    String sql = "UPDATE FlightProject.dbo.UserData SET ShoppingFlight1 = 'NULL', ShoppingFlight2 = 'NULL', ShoppingFlight3 = 'NULL', ShoppingFlight4 = 'NULL', ShoppingFlight5 = 'NULL' WHERE ID = '" + id + "'"; 
    
    try {
    	
		rs = stmt.executeQuery(sql);
	  
	    rs.close();
	    
	    return true;
	      
	   }catch(SQLException se){
		   
	      se.printStackTrace();
	      
	   }catch(Exception e){
	     
	      e.printStackTrace();
	      
	   }finally{

	      if(stmt!=null)
			 
		    ConnectionHandling.CloseConnection();
	      
	      if(con!=null)
			 
			 ConnectionHandling.CloseConnection();
	      
	   }

return false;

	}	
	

}

